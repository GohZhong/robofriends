{"version":3,"sources":["components/scroll.js","components/searchBox.js","components/card.js","components/cardList.js","components/errorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Scroll","props","children","SearchBox","searchChange","className","style","position","top","type","placeholder","onChange","Card","id","name","email","src","alt","CardList","robots","map","user","i","ErrorBoundry","state","hasError","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","resp","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAUeA,EARA,SAACC,GACZ,OACI,8BACKA,EAAMC,YCMJC,G,KARG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKC,UAAU,MAAMC,MAAO,CAACC,SAAU,SAAUC,IAAI,IAAK,OAAS,OAAnE,SACI,uBAAOH,UAAU,wCAAuCI,KAAK,SAASC,YAAY,gBAAgBC,SAAUP,QCYzGQ,EAfF,SAACX,GACV,IAAOY,EAAiBZ,EAAjBY,GAAGC,EAAcb,EAAda,KAAKC,EAASd,EAATc,MACf,OACI,sBAAKV,UAAU,kDAAkDC,MAAQ,CAAC,MAAS,cAAe,OAAS,cAAe,QAAU,WAApI,UACI,qBAAKU,IAAG,+BAA0BH,EAA1B,iBAA6CI,IAAI,UACzD,gCACI,6BAAKH,IACL,8BACI,4BAAIC,aCkBTG,EA1BE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAQf,OACI,qBAAKb,MAPA,CACD,QAAW,OACX,SAAa,OACb,eAAkB,UAItB,SAEQa,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIT,GAAIQ,EAAKR,GACTC,KAAMO,EAAKP,KACXC,MAAOM,EAAKN,OAHPO,SCMlBC,E,kDAnBX,WAAYtB,GAAQ,IAAD,8BACf,cAAMA,IACDuB,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,WACIC,KAAKC,SAAS,CAAEF,UAAW,M,oBAG/B,WACI,OAAIC,KAAKF,MAAMC,SACJ,kEAEJC,KAAKzB,MAAMC,a,GAhBC0B,aC4CZC,E,kDAtCZ,aAAc,IAAD,8BACZ,gBAaAC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAb9C,EAAKV,MAAQ,CACfL,OAAQ,GACRa,YAAa,IAJC,E,qDAQZ,WAAqB,IAAD,OAChBG,MAAM,8CACLC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACR,OAAQoB,S,oBAO1C,WACI,MAAgCb,KAAKF,MAA7BL,EAAR,EAAQA,OAAQa,EAAhB,EAAgBA,YACVQ,EAAiBrB,EAAOsB,QAAO,SAAAC,GACjC,OAAOA,EAAM5B,KAAK6B,cAAcC,SAASZ,EAAYW,kBAGzD,OAAQxB,EAAO0B,OAEf,sBAAKxC,UAAU,KAAf,UACI,oBAAIA,UAAW,KAAf,yBACA,cAAC,EAAD,CAAWD,aAAcsB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUX,OAAQqB,WAN9B,oBAAInC,UAAU,QAAd,4B,GA1BUuB,aCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8033674e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport 'tachyons';\r\n\r\nconst SearchBox = ( {searchChange} ) => {\r\n    return(\r\n        <div className='pa2' style={{position: 'sticky', top:'0', 'zIndex':'100'}}>\r\n            <input className='w5-m pa3 ba b--green bg-lightest-blue'type='search' placeholder='Search robots' onChange={searchChange}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport 'tachyons';\r\n\r\nconst Card = (props) => {\r\n    const {id,name,email} = props;\r\n    return(\r\n        <div className=\"tc bg-light-green dib br3 ma2 grow bw2 shadow-5\" style= {{'width': 'fit-content', 'height':'fit-content', 'padding':'0px 5px'}}>\r\n            <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robot\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <div>\r\n                    <p>{email}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './card.js';\r\n\r\nconst CardList = ({robots}) => {\r\n    let stylingObject = {\r\n        div: {\r\n            'display': 'flex',\r\n            'flexWrap' : 'wrap',\r\n            'justifyContent': 'center',\r\n        }\r\n    }\r\n    return(\r\n        <div style={stylingObject.div}>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                            key={i}\r\n                            id={user.id}\r\n                            name={user.name}\r\n                            email={user.email}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardList;","import React, { Component } from 'react';\r\nimport 'tachyons'\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({ hasError : true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooops. Something stopped working</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import './App.css';\r\nimport React, { Component } from 'react';\r\n\r\nimport Scroll from '../components/scroll.js';\r\nimport SearchBox from '../components/searchBox.js';\r\nimport CardList from '../components/cardList.js';\r\nimport ErrorBoundry from '../components/errorBoundry.js';\r\n\r\nclass App extends Component {\r\n  \tconstructor(){\r\n\t  \tsuper()\r\n\t  \tthis.state = {\r\n\t\trobots: [],\r\n\t\tsearchfield: ''\r\n\t\t}\r\n  \t};\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(resp => resp.json())\r\n        .then(users => this.setState({robots: users}))\r\n    };\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })  //try EventTarget\r\n    };\r\n    \r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        });\r\n\r\n        return !robots.length ?\r\n        <h1 className='tc h1'>Loading...</h1> :\r\n        <div className='tc'>\r\n            <h1 className= 'h1'>Robofriends</h1>\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n            <ErrorBoundry>\r\n                <Scroll>\r\n                    <CardList robots={filteredRobots}/>\r\n                </Scroll>\r\n            </ErrorBoundry>    \r\n        </div>\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}